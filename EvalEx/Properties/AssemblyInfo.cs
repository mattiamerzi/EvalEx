//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice Ã¨ stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Runtime.CompilerServices.InternalsVisibleTo("EvalExTest")] // share "internal" classes to the MsTest Project

[assembly: System.Reflection.AssemblyCompanyAttribute("Mattia Merzi")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyCopyrightAttribute("2019-2020 Mattia Merzi")]
[assembly: System.Reflection.AssemblyDescriptionAttribute("Simple expression evaluator\r\n= handles double precision floating point numbers and strings  (vars are automatically cast to the corresponding type - no explicit cast)\r\n= it's possible to declare and use arrays of doubles (limited functionalities)\r\n= support for map (double array => double array) and reduce (double array => double)\r\n= an Expression can be used as a named input function for other expressions\r\n= (experimental) function caching support\r\n= dedicated string-based operators\r\n\r\nInitial source code derived from \"Java EvalEx\" by Udo Klimaschewski")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("0.1.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("0.1.0")]
[assembly: System.Reflection.AssemblyProductAttribute("EvalEx")]
[assembly: System.Reflection.AssemblyTitleAttribute("EvalEx")]
[assembly: System.Reflection.AssemblyVersionAttribute("0.1.0.0")]

// Generato dalla classe WriteCodeFragment di MSBuild.

